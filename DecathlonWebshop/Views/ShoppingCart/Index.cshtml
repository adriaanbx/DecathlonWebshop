@using System.Globalization

@model ShoppingCartViewModel
@inject IViewLocalizer Localizer

@{
    //TODO culture opvragen geeft andere problemen (zie todo punt HomeController-Index), daarom hardcoded "nl-BE" genomen
    var cultureInfo = new CultureInfo("nl-BE");
}

<h2>@Localizer["TXT_YourShoppingCart"]</h2>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>@Localizer["TXT_SelectedAmount"]</th>
            <th>@Localizer["TXT_Product"]</th>
            <th class="text-right">@Localizer["TXT_Price"]</th>
            <th class="text-right">@Localizer["TXT_Subtotal"]</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var line in Model.ShoppingCart.ShoppingCartItems)
        {
            <tr>
                <td class="text-center">@line.Amount</td>
                <td class="text-left">@line.Product.Name</td>
                <td class="text-right">@line.Product.Price.ToString("c",cultureInfo)</td>
                <td class="text-right">
                    @((line.Amount * line.Product.Price).ToString("c",cultureInfo))
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="3" class="text-right">@Localizer["TXT_Total"]</td>
            <td class="text-right">
                @Model.ShoppingCartTotal.ToString("c", cultureInfo)
            </td>
        </tr>
    </tfoot>
</table>

<div class="text-center">
    <a class="btn btn-primary" asp-controller="Order" asp-action="Checkout">@Localizer["TXT_CheckOut"]</a>
</div>

